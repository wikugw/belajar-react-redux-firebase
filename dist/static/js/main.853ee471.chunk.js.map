{"version":3,"sources":["components/auth/SignIn.js","store/actions/authActions.js","components/auth/SignUp.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Notifications.js","components/dashboard/Dashboard.js","components/layout/SignedInLink.js","components/layout/SignedOutLink.js","components/layout/Navbar.js","components/projects/CreateProject.js","store/actions/projectActions.js","components/projects/ProjectDetails.js","App.js","serviceWorker.js","store/reducer/authReducer.js","store/reducer/projectReducer.js","store/reducer/rootReducer.js","config/fbconfig.js","index.js"],"names":["SignIn","state","email","password","handleChange","e","setState","target","id","value","handleSubmit","preventDefault","props","signIn","this","authError","auth","uid","to","className","onSubmit","htmlFor","type","onChange","Component","connect","firebase","dispatch","creds","credentials","getState","getFirebase","signInWithEmailAndPassword","then","catch","error","SignUp","firstName","lastName","signUp","newUser","getFirestore","firestore","createUserWithEmailAndPassword","response","collection","doc","user","set","initials","ProjectSummary","project","title","authorFirstName","authorLastName","moment","createdAt","toDate","calendar","ProjectList","projects","map","key","Notifications","notifications","item","content","time","fromNow","Dashboard","compose","console","log","ordered","firestoreConnect","orderBy","limit","signOut","href","onClick","profile","SignedOutLink","links","CreateProject","createProject","history","push","authorId","add","Date","ownProps","match","params","data","authorFirsName","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","useFirestoreForProfile","userProfile","attachAuthIsReady","rrfProps","config","createFirestoreInstance","presence","sessions","AuthIsLoaded","children","useSelector","isLoaded","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.853ee471.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { signIn } from \"../../store/actions/authActions\"\r\nimport { Redirect } from \"react-router-dom\"\r\n\r\nclass SignIn extends Component {\r\n  state = {\r\n    email: '',\r\n    password: ''\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.signIn(this.state)\r\n  }\r\n  render() {\r\n    const { authError, auth } = this.props;\r\n    if (auth.uid) return <Redirect to=\"/\" />\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">\r\n            Sign In\r\n        </h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n            <div className=\"center red-text\">\r\n              {authError ? <p>Login Error</p> : null}\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signIn: (creds) => dispatch(signIn(creds))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\r\n","import { getFirebase } from \"react-redux-firebase\";\r\n\r\nexport const signIn = (credentials) => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n    firebase.auth().signInWithEmailAndPassword(\r\n      credentials.email,\r\n      credentials.password\r\n    ).then(() => {\r\n      dispatch({ type: 'LOGIN_SUCCESS' })\r\n    }).catch((error) => {\r\n      dispatch({ type: 'LOGIN_ERROR', error })\r\n    })\r\n  }\r\n}\r\n\r\nexport const signOut = () => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n    firebase.auth().signOut().then(() => {\r\n      dispatch({ type: 'SIGNOUT_SUCCESS' })\r\n    });\r\n  }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const firebase = getFirebase();\r\n    const firestore = getFirestore();\r\n\r\n    firebase.auth().createUserWithEmailAndPassword(\r\n      newUser.email,\r\n      newUser.password\r\n    ).then((response) => {\r\n      return firestore.collection('users').doc(response.user.uid).set({\r\n        firstName: newUser.firstName,\r\n        lastName: newUser.lastName,\r\n        initials: newUser.firstName[0] + newUser.lastName[0]\r\n      })\r\n    }).then(() => {\r\n      dispatch({ type: 'SIGNUP_SUCCESS' })\r\n    }).catch((error) => {\r\n      dispatch({ type: 'SIGNUP_ERROR', error })\r\n    })\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport { Redirect } from \"react-router-dom\"\r\nimport { connect } from 'react-redux'\r\nimport { signUp } from '../../store/actions/authActions'\r\n\r\nclass SignUp extends Component {\r\n  state = {\r\n    email: '',\r\n    password: '',\r\n    firstName: '',\r\n    lastName: ''\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.signUp(this.state)\r\n  }\r\n  render() {\r\n    const { auth, authError } = this.props;\r\n    if (auth.uid) return <Redirect to=\"/\" />\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">\r\n            Sign Up\r\n        </h5>\r\n          {/* email */}\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n          </div>\r\n          {/* password */}\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n          </div>\r\n          {/* firstname */}\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"firstName\">First Name</label>\r\n            <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\r\n          </div>\r\n          {/* lastname */}\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"lastName\">Last Name</label>\r\n            <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n            <div className=\"center red-text\">\r\n              {authError ? <p>{authError}</p> : null}\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    authError: state.auth.authError\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signUp: (newUser) => dispatch(signUp(newUser))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\r\n","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst ProjectSummary = ({ project }) => {\r\n  return (\r\n    <div>\r\n      <div className=\"card z-depth-0 project-summary\">\r\n        <div className=\"card-content Grey-text text-darken-3\">\r\n          <span className=\"card-title\">{project.title}</span>\r\n          <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\r\n          <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProjectSummary\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport ProjectSummary from './ProjectSummary'\r\n\r\nconst ProjectList = ({ projects }) => {\r\n  return (\r\n    <div className=\"project-list section\">\r\n      {projects && projects.map(project => {\r\n        return (\r\n          <Link to={`/project/${project.id}`} key={project.id}>\r\n            <ProjectSummary project={project} />\r\n          </Link>\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProjectList\r\n","import React from 'react'\r\nimport moment from 'moment'\r\nconst Notifications = (props) => {\r\n  const { notifications } = props\r\n  return (\r\n    <div className=\"section\">\r\n      <div className=\"card z-depth-0\">\r\n        <div className=\"card-content\">\r\n          <div className=\"card-title\">\r\n            Notifications\r\n          </div>\r\n          <ul className=\"notifications\">\r\n            {notifications && notifications.map(item => {\r\n              return (\r\n                <li key={item.id}>\r\n                  <span className=\"pink-text\">{item.user} </span>\r\n                  <span>{item.content}</span>\r\n                  <div className=\"grey-text note-date\">\r\n                    {moment(item.time.toDate()).fromNow()}\r\n                  </div>\r\n                </li>\r\n              )\r\n            })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notifications\r\n","import React, { Component } from 'react'\r\nimport ProjectList from '../projects/ProjectList'\r\nimport Notifications from './Notifications'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass Dashboard extends Component {\r\n  render() {\r\n    const { projects, auth, notifications } = this.props;\r\n\r\n    if (auth.uid) {\r\n      return (\r\n        <div className=\"dashboard container\">\r\n          <div className=\"row\">\r\n            <div className=\"col s12 m6\">\r\n              <ProjectList projects={projects} />\r\n            </div>\r\n            <div className=\"col s12 m5 offset-m1\">\r\n              <Notifications notifications={notifications} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )\r\n    } else {\r\n      return <Redirect to=\"/signin\" />\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(state);\r\n  return {\r\n    projects: state.firestore.ordered.projects,\r\n    auth: state.firebase.auth,\r\n    notifications: state.firestore.ordered.notifications\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: 'projects', orderBy: ['createdAt', 'desc'] },\r\n    { collection: 'notifications', limit: 3, orderBy: ['time', 'desc'] }\r\n  ])\r\n)(Dashboard)\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signOut } from '../../store/actions/authActions'\r\n\r\nconst SignedInLink = (props) => {\r\n\r\n  const handleClick = (e) => {\r\n    e.preventDefault();\r\n    props.signOut()\r\n  }\r\n\r\n  return (\r\n    <ul className=\"right\">\r\n      <li>\r\n        <NavLink to=\"/create\">New Project</NavLink>\r\n      </li>\r\n      <li>\r\n        <a href=\"#\" onClick={handleClick} to=\"/\">Log Out</a>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">{props.profile.initials}</NavLink>\r\n      </li>\r\n    </ul>\r\n  )\r\n}\r\n\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signOut: () => dispatch(signOut())\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLink)\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst SignedOutLink = () => {\r\n  return (\r\n    <div>\r\n      <ul className=\"right\">\r\n        <li>\r\n          <NavLink to=\"/signup\">Sign Up</NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/signin\">Log In</NavLink>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SignedOutLink\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport SignedInLink from './SignedInLink'\r\nimport SignedOutLink from './SignedOutLink'\r\nimport { connect } from 'react-redux'\r\n\r\nconst Navbar = (props) => {\r\n  const { auth, profile } = props;\r\n  const links = auth.uid ? <SignedInLink profile={profile} /> : <SignedOutLink />\r\n  return (\r\n    <nav className=\"nav-wrapper grey darken-3\">\r\n      <div className=\"container\">\r\n        <Link to=\"/\" className=\"brand-logo\">MarioPlan</Link>\r\n        {links}\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nconst mapStatetoProps = (state) => {\r\n  console.log(state);\r\n  return {\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile\r\n  }\r\n}\r\n\r\nexport default connect(mapStatetoProps)(Navbar)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createProject } from '../../store/actions/projectActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass CreateProject extends Component {\r\n  state = {\r\n    title: '',\r\n    content: ''\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.createProject(this.state)\r\n    this.props.history.push('/')\r\n  }\r\n  render() {\r\n    const { auth } = this.props\r\n    if (!auth.uid) { return < Redirect to=\"/signin\" /> }\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">\r\n            Create Project\r\n        </h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"title\">Title</label>\r\n            <input type=\"text\" id=\"title\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"content\">Content</label>\r\n            <textarea className=\"materialize-textarea\" id=\"content\" onChange={this.handleChange}></textarea>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    createProject: (project) => dispatch(createProject(project))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)\r\n","export const createProject = (project) => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const firestore = getFirestore();\r\n    const profile = getState().firebase.profile;\r\n    const authorId = getState().firebase.auth.uid\r\n    firestore.collection('projects').add({\r\n      ...project,\r\n      authorFirstName: profile.firstName,\r\n      authorLastName: profile.lastName,\r\n      authorId: authorId,\r\n      createdAt: new Date()\r\n    }).then(() => {\r\n      dispatch({ type: 'CREATE_PROJECT', project });\r\n    }).catch((error) => {\r\n      dispatch({ type: 'CREATE_PROJECT_ERROR', error });\r\n    });\r\n    // make async call to database\r\n  }\r\n};","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect, ReduxFirestoreContext } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\nconst ProjectDetails = (props) => {\r\n  const { project, auth } = props;\r\n  console.log(project);\r\n  if (!auth.uid) return <Redirect to=\"/signin\" />\r\n  if (project) {\r\n    return (\r\n      <div className=\"container section project-details\">\r\n        <div className=\"card z-depth-0\">\r\n          <div className=\"card-content\">\r\n            <span className=\"card-title\">{project.title}</span>\r\n            <p>{project.content}</p>\r\n          </div>\r\n          <div className=\"card-action grey lighten-4 grey-text\">\r\n            <div>Posted by {project.authorLastName} {project.authorFirsName}</div>\r\n            <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  } else {\r\n    return (\r\n      <div className=\"container center\">\r\n        <p>Loading Project...</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  // console.log(state);\r\n  const id = ownProps.match.params.id\r\n  const projects = state.firestore.data.projects\r\n  const project = projects ? projects[id] : null\r\n  return {\r\n    project: project,\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: 'project' }\r\n  ])\r\n)(ProjectDetails)\r\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport Dashboard from './components/dashboard/Dashboard';\nimport Navbar from './components/layout/Navbar';\nimport CreateProject from './components/projects/CreateProject';\nimport ProjectDetails from './components/projects/ProjectDetails';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\" component={Dashboard} />\n          <Route path=\"/project/:id\" component={ProjectDetails} />\n          <Route path=\"/signin\" component={SignIn} />\n          <Route path=\"/signup\" component={SignUp} />\n          <Route path=\"/create\" component={CreateProject} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\r\n  authError: null\r\n};\r\n\r\nconst authReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case ('LOGIN_ERROR'):\r\n      console.log(\"login failed\");\r\n      return {\r\n        ...state,\r\n        authError: 'Login Failed'\r\n      }\r\n    case ('LOGIN_SUCCESS'):\r\n      console.log(\"login success\");\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      }\r\n    case ('SIGNOUT_SUCCESS'):\r\n      console.log(\"signout success\");\r\n      return state\r\n    case ('SIGNUP_SUCCESS'):\r\n      console.log(\"signup success\");\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      }\r\n    case ('SIGNUP_ERROR'):\r\n      console.log(\"signup error\");\r\n      return {\r\n        ...state,\r\n        authError: action.error.message\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default authReducer","const initState = {\r\n  projects: [\r\n    { id: '1', title: 'menyapu', content: 'menyapu rumah tetangga' },\r\n    { id: '2', title: 'menyiram', content: 'menyiram bunga' },\r\n    { id: '3', title: 'makan', content: 'masak dulu ding' }\r\n  ]\r\n};\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case 'CREATE_PROJECT':\r\n      console.log('porject created', action.project);\r\n      return state;\r\n    case 'CREATE_PROJECT_ERROR':\r\n      console.log('create project error', action.error);\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default projectReducer","import authReducer from './authReducer'\r\nimport projectReducer from './projectReducer'\r\nimport { combineReducers } from 'redux'\r\nimport { firestoreReducer } from 'redux-firestore'\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  project: projectReducer,\r\n  firestore: firestoreReducer,\r\n  firebase: firebaseReducer\r\n})\r\n\r\nexport default rootReducer\r\n","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyCq_hC9CbX5KVudPvkNhNf-p98Kif73sLE\",\r\n  authDomain: \"mario-plan-2fb4b.firebaseapp.com\",\r\n  databaseURL: \"https://mario-plan-2fb4b.firebaseio.com\",\r\n  projectId: \"mario-plan-2fb4b\",\r\n  storageBucket: \"mario-plan-2fb4b.appspot.com\",\r\n  messagingSenderId: \"305748219116\",\r\n  appId: \"1:305748219116:web:86efc29d9cb95df7fa01c9\",\r\n  measurementId: \"G-3HTYJTH63H\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n// firebase.firestore().settings({ timestampsInSnapshots: true })\r\n\r\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducer/rootReducer';\nimport { Provider, useSelector } from 'react-redux';\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore, createFirestoreInstance } from 'redux-firestore'\nimport { ReactReduxFirebaseProvider, getFirebase, isLoaded } from 'react-redux-firebase'\nimport fbConfig from './config/fbconfig'\nimport firebase from \"firebase/app\";\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirestore, getFirebase })),\n    reduxFirestore(fbConfig, { useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true })\n  )\n);\n\n\nconst rrfProps = {\n  firebase,\n  config: fbConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance,\n  userProfile: 'users',\n  presence: 'presence',\n  sessions: 'sessions'\n};\n\nfunction AuthIsLoaded({ children }) {\n  const auth = useSelector(state => state.firebase.auth)\n  if (!isLoaded(auth)) return <div>Loading Screen...</div>;\n  return children\n}\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n      <AuthIsLoaded>\n        <App />\n      </AuthIsLoaded>\n    </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}